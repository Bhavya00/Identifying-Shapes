import numpy as np
import cv2

# Load image and then gray scale it 
image=cv2.imread("image4.png")
gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)

cv2.imshow("Identifying Shapes",image)
cv2.waitKey(0)

ret,thresh=cv2.threshold(gray,127,255,1)

# Extract Contours
contours, hierarchy=cv2.findContours(thresh.copy(),cv2.RETR_LIST,cv2.CHAIN_APPROX_NONE)

for cnt in contours:
    # Get approximate Polygons
    approx=cv2.approxPolyDP(cnt,0.01*cv2.arcLength(cnt,True),True)
    
    if len(approx)==3:
        shape_name="Triangle"
        cv2.drawContours(image,[cnt],0,(0,255,0),-1)
        
        # Find Contour center to place the text at the center
        M=cv2.moments(cnt)
        cx=int(M['m10']/M['m00'])
        cy=int(M['m01']/M['m00'])
        cv2.putText(image,shape_name,(cx-50,cy),cv2.FONT_HERSHEY_SIMPLEX,1,(0,0,0),1)
    elif len(approx)==4:
        x,y,w,h=cv2.boundingRect(cnt)
        M=cv2.moments(cnt)
        cx=int(M['m10']/M['m00'])
        cy=int(M['m01']/M['m00'])
        
        # Check if our polygon is rectangle or square
        
        if abs(w-h)<=3:
            shape_name="Square"
            # Find Contour center to place text at center
            cv2.drawContours(image,[cnt],0,(0,125,255),-1)
            cv2.putText(image,shape_name,(cx-50,cy),cv2.FONT_HERSHEY_SIMPLEX,1,(0,0,0),1)
        else :
            shape_name="Rectangle"
            # Find Contour center to place text at center
            cv2.drawContours(image,[cnt],0,(0,0,255),-1)
            M=cv2.moments(cnt)
            cx=int(M['m10']/M['m00'])
            cy=int(M['m01']/M['m00'])
            cv2.putText(image,shape_name,(cx-50,cy),cv2.FONT_HERSHEY_SIMPLEX,1,(0,0,0),1)
    elif len(approx)>=15:
         shape_name="Circle"
         # Find Contour center to place text at center
         cv2.drawContours(image,[cnt],0,(0,0,255),-1)
         M=cv2.moments(cnt)
         cx=int(M['m10']/M['m00'])
         cy=int(M['m01']/M['m00'])
         cv2.putText(image,shape_name,(cx-50,cy),cv2.FONT_HERSHEY_SIMPLEX,1,(0,0,0),1)
    cv2.imshow("Identifying shapes",image)
    cv2.waitKey(0)
cv2.destroyAllWindows()
